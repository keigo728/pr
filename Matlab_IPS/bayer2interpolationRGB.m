% data : 
% type : 'FIT' makes one pixel mergin at upper, bottm, right and left side. (default)
% method : Bayer matrix design
%			'RGGB'		'GRBG'
%			  RG          GR
%			  GB          BG

function [R,G,B] = bayer2interpolationRGB(data,type,method)

%=====================================================================================
% 画像サイズがノリシロなしならば、上下左右に1画素多くとってマージンを作って入力する
%=====================================================================================
if strcmp(type,'FIT')
	data=padarray(data,[1,1],'both');
end

[px,py]=size(data)

px=px-2;
py=py-2;
w=px/2;
h=py/2;
  
%		figure;imshow(data,[],'notruesize');
	
%-------------------------------------------------
% 	[(p+1,q+1),	(p+1,q+2),	(p+1,q+3)]
% 	[(p+2,q+1),	(p+2,q+2),	(p+2,q+3)]
% 	[(p+3,q+1),	(p+3,q+2),	(p+3,q+3)]
%-------------------------------------------------

if strcmp(method,'RGGB')
	%-------------------------------------------------
	% [B 0]
	% [0 0]
	%-------------------------------------------------
	B = data;
	for p=1:2:px-1
		for q=1:2:py-1				
			B(p+1,q+2) = ( B(p+1,q+1) + B(p+1,q+3) )/2;
			B(p+2,q+1) = ( B(p+1,q+1) + B(p+3,q+1) )/2;
			B(p+2,q+2) = ( B(p+1,q+1) + B(p+3,q+3) + B(p+1,q+3) + B(p+3,q+1) )/4;		
		end
	end

	%%% 端の不例部分は隣接値を入れる
	for p=1:2:px-1
		B(p+1,end-1) = B(p+1,end-2);
		B(end-1,p+1) = B(end-2,p+1);
		B(p+2,end-1) = (B(p+1,end-2) + B(p+3,end-2))/2;
		B(end-1,p+2) = (B(end-2,p+1) + B(end-2,p+3))/2;
	end

	B(end-1,end-1) = B(end-2,end-2);

	% 余分な部分を除去する
	B(1,:)=[];	B(:,1)=[];	B(end,:)=[];	B(:,end)=[];
 
% 		figure(62);imshow(B,[],'notruesize');colorbar;
		
	
	%-------------------------------------------------
	% [0 0]
	% [0 R]
	%-------------------------------------------------
	R = rot90(data,2);
	for p=1:2:px-1
		for q=1:2:py-1				
			R(p+1,q+2) = ( R(p+1,q+1) + R(p+1,q+3) )/2;
			R(p+2,q+1) = ( R(p+1,q+1) + R(p+3,q+1) )/2;
			R(p+2,q+2) = ( R(p+1,q+1) + R(p+3,q+3) + R(p+1,q+3) + R(p+3,q+1) )/4;		
		end
	end

		%%% 端の不例部分は隣接値を入れる
	for p=1:2:px-1
		R(p+1,end-1) = R(p+1,end-2);
		R(end-1,p+1) = R(end-2,p+1);
		R(p+2,end-1) = (R(p+1,end-2) + R(p+3,end-2))/2;
		R(end-1,p+2) = (R(end-2,p+1) + R(end-2,p+3))/2;
	end

	R(end-1,end-1) = R(end-2,end-2);

	% 余分な部分を除去する
	R(1,:)=[];	R(:,1)=[];	R(end,:)=[];	R(:,end)=[];
	R=rot90(R,2);

% 		figure(63);imshow(R,[],'notruesize');colorbar;


	%-------------------------------------------------
	% [0 G]
	% [G 0]
	%-------------------------------------------------
	G=data;
	for p=1:2:px
		for q=1:2:py			
			G(p+1,q+1)= ( G(p+1,q)   + G(p+1,q+2) + G(p,q+1)   + G(p+2,q+1) )/4;
			G(p+2,q+2)= ( G(p+2,q+1) + G(p+2,q+3) + G(p+1,q+2) + G(p+3,q+2) )/4;
		end
	end

	%%% 端の不例部分は隣接値を入れる
	for p=1:2:px-1
		G(p+1,2)     = ( G(p,2) + G(p+2,2) + G(p+1,3))/3;
		G(2,p+1)     = ( G(2,p) + G(2,p+2) + G(3,p+1))/3;
		G(p+2,end-1) = ( G(p+1,end-1) + G(p+3,end-1) + G(p+2,end-2))/3;
		G(end-1,p+2) = ( G(end-1,p+1) + G(end-1,p+3) + G(end-2,p+2))/3;
	end

	%%% 角の点は隣接地を入れる
	G(2,2) = ( G(3,2) + G(2,3) )/2;
	G(end-1,end-1) = ( G(end-1,end-2) + G(end-2,end-1) )/2;

	%%% 余分な部分を除去する
	G(1,:)=[];	G(:,1)=[];	G(end,:)=[];	G(:,end)=[];

% 		figure(64);imshow(G,[],'notruesize');
	


elseif strcmp(method,'GRBG')


	%-------------------------------------------------
	% [0 R]
	% [0 0]
	%-------------------------------------------------
	R = data;
	for p=1:2:px-1
		for q=1:2:py-1		
			R(p+1,q+1) = ( R(p+1,q)   + R(p+1,q+2) )/2;
			R(p+2,q+2) = ( R(p+1,q+2) + R(p+3,q+2) )/2;
			R(p+2,q+1) = ( R(p+1,q)   + R(p+3,q+2) + R(p+1,q+2) + R(p+1,q) )/4;	
		end
	end

	%%% 端の不例部分は隣接値を入れる
	for p=1:2:px-1
		    R(p+1,2) = R(p+1,3);
		R(end-1,p+2) = R(end-2,p+2);	
		    R(p+2,2) = (R(p+1,3) + R(p+3,3))/2;
		R(end-1,p+1) = (R(end-2,p) + R(end-2,p+2))/2;
	end

	R(end-1,2) = R(end-2,3);

	% 余分な部分を除去する
	R(1,:)=[];	R(:,1)=[];	R(end,:)=[];	R(:,end)=[];
 
% 		figure(62);imshow(R,[],'notruesize');colorbar;
		

	%-------------------------------------------------
	% [0 0]
	% [B 0]
	%-------------------------------------------------
	B = rot90(data,2);
	for p=1:2:px-1
		for q=1:2:py-1
				
			B(p+1,q+1) = ( B(p+1,q)   + B(p+1,q+2) )/2;
			B(p+2,q+2) = ( B(p+1,q+2) + B(p+3,q+2) )/2;
			B(p+2,q+1) = ( B(p+1,q)   + B(p+3,q+2) + B(p+1,q+2) + B(p+1,q) )/4;
		
		end
	end

	%%% 端の不例部分は隣接値を入れる
	for p=1:2:px-1
		    B(p+1,2) = B(p+1,3);
		B(end-1,p+2) = B(end-2,p+2);
		    B(p+2,2) = (B(p+1,3) + B(p+3,3))/2;
		B(end-1,p+1) = (B(end-2,p) + B(end-2,p+2))/2;
	end

	B(end-1,2) = B(end-2,3);

	% 余分な部分を除去する
	B(1,:)=[];	B(:,1)=[];	B(end,:)=[];	B(:,end)=[];	B = rot90(B,2);

% 		figure(63);imshow(B,[],'notruesize');colorbar;


	%-------------------------------------------------
	% [G 0]
	% [0 G]
	%-------------------------------------------------
	G=data;
	for p=1:2:px
		for q=1:2:py			
			G(p+1,q+2)= ( G(p+1,q+1) + G(p+1,q+3) + G(p,q+2)   + G(p+2,q+2) )/4;
			G(p+2,q+1)= ( G(p+2,q)   + G(p+2,q+2) + G(p+1,q+1) + G(p+3,q+1) )/4;
		end
	end

	%%% 端の不例部分は隣接値を入れる
	for p=1:2:px-1
		    G(p+2,2) = ( G(p+1,2) + G(p+3,2) + G(p+2,3))/3;
			G(2,p+2) = ( G(2,p+1) + G(2,p+3) + G(3,p+2))/3;
		G(p+1,end-1) = ( G(p,end-1) + G(p+2,end-1) + G(p+1,end-2))/3;
		G(end-1,p+1) = ( G(end-1,p) + G(end-1,p+2) + G(end-2,p+1))/3;
	end

	G(2,end-1) = ( G(3,end-1) + G(2,end-2) )/2;
	G(end-1,2) = ( G(end-2,2) + G(end-1,3) )/2;
	
	% 余分な部分を除去する
	G(1,:)=[];	G(:,1)=[];	G(end,:)=[];	G(:,end)=[];

% 		figure(64);imshow(G,[],'notruesize');
			


	
else
	disp('methodを確認してください！');	
end
